<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.hotelvp.com/DataOperation">
  <dataCommand name="GetSalesManagerHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
      csu.User_Account,
      csu.[User_DspName],
      '['+csu.User_Account+']'+csu.[User_DspName] AS DISPNM,
      convert(nvarchar, hsm.[Start_Dtime], 111) AS StartDtime,
      convert(nvarchar, hsm.[End_Dtime], 111) AS EndDtime,
      csu.User_Tel
      FROM [CMS].[dbo].[CMS_SYS_USERS] csu
      inner join [CMS].[dbo].[HotelSalesManager] hsm
      on csu.User_Account=hsm.[User_Account]
      where hsm.[Hotel_ID]=@HotelID
      AND hsm.[Status]='1'
      ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetSalesManagerSettingHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT hsm.[nid]
      ,hsm.[User_Account]
      ,hsm.[Hotel_ID]
      ,convert(nvarchar, hsm.[Start_Dtime], 111) AS STARTDTIME
      ,convert(nvarchar, hsm.[End_Dtime], 111) AS ENDDTIME
      ,hsm.[Fax] AS FAX
      ,hsm.[Per] AS PER
      ,hsm.[Tel] AS TEL
      ,hsm.[Email] AS EML
      ,hsm.[Create_User] AS CREATEUSER
      ,hsm.[Create_Time] AS CREATEDT
      ,ISNULL(csu.[User_DspName],'解除绑定') AS SALESNM
      FROM [CMS].[dbo].[HotelSalesManager_History] hsm
      left join [CMS].[dbo].[CMS_SYS_USERS] csu
      ON csu.User_Account=hsm.[User_Account]
      WHERE hsm.Hotel_ID=@HotelID
      ORDER BY hsm.[Create_Time] DESC
      ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CheckUpdateSalesID" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT csu.[User_Account] AS USERACCOUNT
        ,csu.[User_DspName] AS USERNM
        ,csu.[User_Tel] AS TEL
        FROM [CMS].[dbo].[CMS_SYS_USERS] csu
        inner join dbo.CMS_SYS_USER_ELEMENT csue
        on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
        where 
        csu.[User_Account]= @UserCode
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@RoleID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="SalesMangeDetialSelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT csu.[User_Account] AS USERACCOUNT
        ,csu.[User_DspName] AS USERNM
        ,csu.[User_SalesManager] AS SALESMANAGER
        ,csu.[User_Tel] AS TEL
        ,ISNULL(tt.HotelSum,0) AS HOTELSUM
        FROM [CMS].[dbo].[CMS_SYS_USERS] csu
        inner join dbo.CMS_SYS_USER_ELEMENT csue
        on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
        left join (SELECT [User_Account],
            count([Hotel_ID]) AS HotelSum
        FROM [CMS].[dbo].[HotelSalesManager] where [Status]='1' group by [User_Account]) tt
        on csu.[User_Account] = tt.[User_Account]
        where 
        ((@UserCode IS NULL) OR (csu.[User_Account]= @UserCode))
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@RoleID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="SalesMangeHotelListSelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [User_Account] AS ACCOUNT,
        [Hotel_ID] AS HOTELID,
        '' AS HOTELNM,
        '' AS STARNM,
        '' AS AREANM,
        convert(nvarchar, Start_Dtime, 111) AS STARTDTIME,
        convert(nvarchar, End_Dtime, 111) AS ENDDTIME,
        [Create_Time] AS CTIME
        FROM [CMS].[dbo].[HotelSalesManager] where [Status]='1'
        AND [User_Account]= @UserCode
        ORDER BY [Create_Time] DESC
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CheckInsertSalesManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT 
        hlsm.[User_Account] AS USERACCOUNT,
        csu.[User_DspName] AS USERNM,
        hlsm.[Hotel_ID] AS HOTELID,
        '' AS HOTELNM,
        hlsm.[Create_Time] AS CTIME
        FROM [CMS].[dbo].[HotelSalesManager] hlsm
        left join [CMS].[dbo].[CMS_SYS_USERS] csu
        on csu.[User_Account] = hlsm.[User_Account]
        where [Status]='1'
        AND [Hotel_ID]= @HotelID
       ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="DeleteSalesManagerGrid" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [CMS].[dbo].[HotelSalesManager]
           SET [STATUS] = '0'
              ,[Update_User] = @CreateUser
              ,[Update_Time] = getdate()
         WHERE [User_Account] = @UserCode AND [Hotel_ID]=@HotelID
         
         INSERT INTO [CMS].[dbo].[HotelSalesManager_History]
               ([Hotel_ID]
               ,Fax
               ,Per
               ,Tel
               ,Email
               ,[Create_User]
               ,[Create_Time])
         VALUES
               (@HotelID
               ,@Fax
               ,@Per
               ,@Tel
               ,@Email
               ,@CreateUser
               ,getdate()
               )
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@HotelID" dbType="String" />
      <param name="@CreateUser" dbType="String" />
      <param name="@Fax" dbType="String" />
      <param name="@Per" dbType="String" />
      <param name="@Tel" dbType="String" />
      <param name="@Email" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertSalesMangeGrid" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
         IF EXISTS (SELECT [Hotel_ID] FROM [CMS].[dbo].[HotelSalesManager] where [Hotel_ID]=@HotelID and [User_Account] = @UserCode AND [Status]='0')
        BEGIN
          UPDATE [CMS].[dbo].[HotelSalesManager]
           SET [STATUS] = '1'
              ,Start_Dtime=@StartDTime
              ,End_Dtime=@EndDTime
              ,[Update_User] = @CreateUser
              ,[Update_Time] = getdate()
         WHERE [User_Account] = @UserCode AND [Hotel_ID]=@HotelID and [Status]='0'
        END
        ELSE
        BEGIN
         INSERT INTO [CMS].[dbo].[HotelSalesManager]
               ([User_Account]
               ,[Hotel_ID]
               ,Start_Dtime
               ,End_Dtime
               ,[Status]
               ,[Create_User]
               ,[Create_Time]
               ,[Update_User]
               ,[Update_Time])
         VALUES
               (@UserCode
               ,@HotelID
               ,@StartDTime
               ,@EndDTime
               ,'1'
               ,@CreateUser
               ,getdate()
               ,@CreateUser
               ,getdate())
        END
        
        INSERT INTO [CMS].[dbo].[HotelSalesManager_History]
               ([User_Account]
               ,[Hotel_ID]
               ,Start_Dtime
               ,End_Dtime
               ,Fax
               ,Per
               ,Tel
               ,Email
               ,[Create_User]
               ,[Create_Time])
         VALUES
               (@UserCode
               ,@HotelID
               ,@StartDTime
               ,@EndDTime
               ,@Fax
               ,@Per
               ,@Tel
               ,@Email
               ,@CreateUser
               ,getdate()
               )
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@HotelID" dbType="String" />
      <param name="@CreateUser" dbType="String" />
      <param name="@StartDTime" dbType="String" />
      <param name="@EndDTime" dbType="String" />
      <param name="@Fax" dbType="String" />
      <param name="@Per" dbType="String" />
      <param name="@Tel" dbType="String" />
      <param name="@Email" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertBalanceHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE [CMS].[dbo].[HotelBalance_History] SET [Status] = '0',[Update_User]=@CreateUser,[Update_Time]=getdate() 
      WHERE [Hotel_ID]=@HotelID AND [PriceCode]=@PriceCode AND [RoomCode]=@RoomCode AND [InDate]=@InDate AND [Status] ='1'

      INSERT INTO [CMS].[dbo].[HotelBalance_History]
           ([Hotel_ID]
           ,[PriceCode]
           ,[RoomCode]
           ,[InDate]
           ,[BalType]
           ,[BalValue]
           ,[Status]
           ,[Create_User]
           ,[Create_Time])
     VALUES
           (@HotelID
           ,@PriceCode
           ,@RoomCode
           ,@InDate
           ,@BalType
           ,@BalValue
           ,'1'
           ,@CreateUser
           ,getdate())
       ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
      <param name="@PriceCode" dbType="String" />
      <param name="@RoomCode" dbType="String" />
      <param name="@InDate" dbType="String" />
      <param name="@BalType" dbType="String" />
      <param name="@BalValue" dbType="String" />
      <param name="@CreateUser" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertSalesAndHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
          UPDATE [CMS].[dbo].[HotelSalesManager]
           SET [STATUS] = '0'
              ,[Update_User] = @CreateUser
              ,[Update_Time] = getdate()
         WHERE [Hotel_ID]=@HotelID and [Status]='1'

         IF EXISTS (SELECT [Hotel_ID] FROM [CMS].[dbo].[HotelSalesManager] where [Hotel_ID]=@HotelID and [User_Account] = @UserCode AND [Status]='0')
        BEGIN
          UPDATE [CMS].[dbo].[HotelSalesManager]
           SET [STATUS] = '1'
              ,Start_Dtime=@StartDTime
              ,End_Dtime=@EndDTime
              ,[Update_User] = @CreateUser
              ,[Update_Time] = getdate()
         WHERE [User_Account] = @UserCode AND [Hotel_ID]=@HotelID and [Status]='0'
        END
        ELSE
        BEGIN
         INSERT INTO [CMS].[dbo].[HotelSalesManager]
               ([User_Account]
               ,[Hotel_ID]
               ,Start_Dtime
               ,End_Dtime
               ,[Status]
               ,[Create_User]
               ,[Create_Time]
               ,[Update_User]
               ,[Update_Time])
         VALUES
               (@UserCode
               ,@HotelID
               ,@StartDTime
               ,@EndDTime
               ,'1'
               ,@CreateUser
               ,getdate()
               ,@CreateUser
               ,getdate())
        END
        
        INSERT INTO [CMS].[dbo].[HotelSalesManager_History]
               ([User_Account]
               ,[Hotel_ID]
               ,Start_Dtime
               ,End_Dtime
               ,Fax
               ,Per
               ,Tel
               ,Email
               ,[Create_User]
               ,[Create_Time])
         VALUES
               (@UserCode
               ,@HotelID
               ,@StartDTime
               ,@EndDTime
               ,@Fax
               ,@Per
               ,@Tel
               ,@Email
               ,@CreateUser
               ,getdate()
               )
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@HotelID" dbType="String" />
      <param name="@CreateUser" dbType="String" />
      <param name="@StartDTime" dbType="String" />
      <param name="@EndDTime" dbType="String" />
      <param name="@Fax" dbType="String" />
      <param name="@Per" dbType="String" />
      <param name="@Tel" dbType="String" />
      <param name="@Email" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="SalesMangeListSelectCount" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT count(csu.[User_Account])
        FROM [CMS].[dbo].[CMS_SYS_USERS] csu
        inner join dbo.CMS_SYS_USER_ELEMENT csue
        on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
        left join (SELECT [User_Account],
            count([Hotel_ID]) AS HotelSum
        FROM [CMS].[dbo].[HotelSalesManager] where [Status]='1' group by [User_Account]) tt
        on csu.[User_Account] = tt.[User_Account]
        where 
        ((@UserCode IS NULL) OR (csu.[User_DspName] like '%' + @UserCode + '%' ))
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@RoleID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="SalesMangeListSelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(2000)
        DECLARE @CountSql NVARCHAR(2000)
        SET @SelectSql=N'
            SELECT
            TT.RowId,
            TT.USERACCOUNT,
            TT.USERNM,
            TT.SALESMANAGER,
            TT.TEL,
            TT.HOTELSUM
            FROM (SELECT ROW_NUMBER() OVER(ORDER BY csu.[User_Account] asc) AS RowId
            ,csu.[User_Account] AS USERACCOUNT
            ,csu.[User_DspName] AS USERNM
            ,csu.[User_SalesManager] AS SALESMANAGER
            ,csu.[User_Tel] AS TEL
            ,ISNULL(tt.HotelSum,0) AS HOTELSUM
            FROM [CMS].[dbo].[CMS_SYS_USERS] csu
            inner join dbo.CMS_SYS_USER_ELEMENT csue
            on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
            left join (SELECT [User_Account],
                count([Hotel_ID]) AS HotelSum
            FROM [CMS].[dbo].[HotelSalesManager] where [Status]=''1'' group by [User_Account]) tt
            on csu.[User_Account] = tt.[User_Account]
            where 
            ((@UserCode IS NULL) OR (csu.[User_Account]= @UserCode))) TT
            WHERE  TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

        SET @CountSql = N'SELECT @TotalCount=COUNT(csu.[User_Account])
            FROM [CMS].[dbo].[CMS_SYS_USERS] csu
            inner join dbo.CMS_SYS_USER_ELEMENT csue
            on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
            left join (SELECT [User_Account],
                count([Hotel_ID]) AS HotelSum
            FROM [CMS].[dbo].[HotelSalesManager] where [Status]=''1'' group by [User_Account]) tt
            on csu.[User_Account] = tt.[User_Account]
            where 
            ((@UserCode IS NULL) OR (csu.[User_Account]= @UserCode))'

        EXEC sp_executesql @SelectSql,
        N'@RoleID NVARCHAR(50),
          @UserCode NVARCHAR(255),
          @PageSize INT,
          @PageCurrent INT',
          @RoleID,
          @UserCode,
          @PageSize,
          @PageCurrent
  
        EXEC sp_executesql @CountSql,
        N'@RoleID NVARCHAR(50),
          @UserCode NVARCHAR(255),
          @TotalCount INT OUTPUT',
          @RoleID,
          @UserCode,
          @TotalCount OUTPUT
       ]]>
    </commandText>
    <parameters>
      <param name="@UserCode" dbType="String" />
      <param name="@RoleID" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
      <param name="@TotalCount" dbType="Int32" direction="Output" />
    </parameters>
  </dataCommand>

  <dataCommand name="ReviewSalesPlan" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(4000)
        DECLARE @CountSql NVARCHAR(4000)
        SET @SelectSql=N'
            SELECT
            TT.RowId
            ,TT.[nid] AS PLANID
            ,TT.[Type] AS SAVETYPE
            ,CASE WHEN TT.[Type] = ''0'' THEN ''立即保存'' when TT.[Type] = ''1'' then ''定时保存'' when TT.[Type] = ''2'' then ''每日自动更新'' ELSE '''' END AS SAVETYPENM
            ,CASE WHEN TT.[Type] = ''0'' THEN convert(nvarchar, TT.[Plan_Time], 120) when TT.[Type] = ''1'' then convert(nvarchar, TT.[Plan_DTime] , 120) when TT.[Type] = ''2'' then convert(nvarchar, TT.[Plan_Time], 120) ELSE '''' END AS PLANTIME
            ,TT.[Plan_Time]
            ,convert(nvarchar, TT.[Plan_DTime] , 120)AS PLANDTIME
            ,convert(nvarchar, TT.[Start_Dtime], 111) AS PLANSTART
            ,convert(nvarchar, TT.[End_Dtime], 111) AS PLANEND
            ,TT.[Week_List] AS PLANWEEK
            ,CASE WHEN TT.[Status] = ''0'' THEN ''停止执行'' when TT.[Status] = ''1'' then ''自动执行'' when TT.[Status] =''2'' then ''完成执行'' ELSE '''' END AS STATUSDIS
            ,TT.[Status]
            ,TT.[Action]
            ,TT.[Result]
            ,TT.[Create_User] AS CREATEUSER
            ,TT.[Create_Time] AS CREATETIME
            ,TT.[Update_User] AS UPDATEUSER
            ,TT.[Update_Time] AS UPDATETIME
            ,TT.HOTEL_ID
            ,TT.ROOMNM
            FROM (
            SELECT ROW_NUMBER() OVER(ORDER BY hsp.Create_Time desc) AS RowId
			  ,hsp.[nid]
			  ,hsp.[Type]
			  ,hsp.[Plan_Time]
			  ,hsp.[Plan_DTime]
			  ,hsp.[Start_Dtime]
			  ,hsp.[End_Dtime]
			  ,hsp.[Week_List]
			  ,hsp.[Status]
			  ,hsp.[Action]
			  ,hsp.[Result]
			  ,hsp.[Create_User]
			  ,hsp.[Create_Time]
			  ,hsp.[Update_User]
			  ,hsp.[Update_Time]
			  ,hspd.HOTEL_ID
        ,hspd.ROOM_TYPE_NAME AS ROOMNM
			  FROM [CMS].[dbo].[HotelSalesPlanManager] hsp
			  inner join (select HPID,HOTEL_ID,ROOM_TYPE_NAME from [CMS].[dbo].[HotelSalesPlanManager_Detail] where ((@HotelID IS NULL) OR ([HOTEL_ID]= @HotelID))) hspd
			  on hspd.HPID=hsp.nid
            where ((@StartDTime IS NULL) OR (@StartDTime <= hsp.[Create_Time]))
            AND ((@EndDTime IS NULL) OR (hsp.[Create_Time] <= @EndDTime))
            ) TT
            WHERE  TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

        SET @CountSql = N'SELECT @TotalCount=COUNT(hsp.[nid])
			  FROM [CMS].[dbo].[HotelSalesPlanManager] hsp
			  inner join (select HPID,HOTEL_ID from [CMS].[dbo].[HotelSalesPlanManager_Detail] where ((@HotelID IS NULL) OR ([HOTEL_ID]= @HotelID))) hspd
			  on hspd.HPID=hsp.nid
            where 
            ((@StartDTime IS NULL) OR (@StartDTime <= hsp.[Create_Time]))
            AND ((@EndDTime IS NULL) OR (hsp.[Create_Time] <= @EndDTime))'

        EXEC sp_executesql @SelectSql,
        N'@HotelID NVARCHAR(50),
          @StartDTime NVARCHAR(255),
          @EndDTime NVARCHAR(255),
          @PageSize INT,
          @PageCurrent INT',
          @HotelID,
          @StartDTime,
          @EndDTime,
          @PageSize,
          @PageCurrent
  
        EXEC sp_executesql @CountSql,
        N'@HotelID NVARCHAR(50),
          @StartDTime NVARCHAR(255),
          @EndDTime NVARCHAR(255),
          @TotalCount INT OUTPUT',
          @HotelID,
          @StartDTime,
          @EndDTime,
          @TotalCount OUTPUT
       ]]>
    </commandText>
    <parameters>
      <param name="@TotalCount" dbType="Int32" direction="Output" />
      <param name="@HotelID" dbType="String" />
      <param name="@StartDTime" dbType="String" />
      <param name="@EndDTime" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="ReviewSalesPlanDetail" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
        TT.[nid] AS PLANID
        ,TT.[Type] AS SAVETYPE
        ,CASE WHEN TT.[Type] = '0' THEN '立即保存' when TT.[Type] = '1' then '定时保存' when TT.[Type] = '2' then '每日自动更新' ELSE '' END AS SAVETYPENM
        ,CASE WHEN TT.[Type] = '0' THEN convert(nvarchar, TT.[Plan_Time], 120) when TT.[Type] = '1' then convert(nvarchar, TT.[Plan_DTime] , 120) when TT.[Type] = '2' then convert(nvarchar, TT.[Plan_Time], 120) ELSE '' END AS PLANTIME
        ,convert(nvarchar, TT.[Plan_Time], 120) AS PLANTTIME
        ,convert(nvarchar, TT.[Plan_DTime] , 120)AS PLANDTIME
        ,convert(nvarchar, TT.[Start_Dtime], 111) AS PLANSTART
        ,convert(nvarchar, TT.[End_Dtime], 111) AS PLANEND
        ,TT.[Week_List] AS PLANWEEK
        ,TT.[Status] AS PLANSTATUS
        ,CASE WHEN TT.[Status] = '0' THEN '停止执行' when TT.[Status] = '1' then '自动执行' when TT.[Status] ='2' then '完成执行' ELSE '' END AS STATUSDIS
        ,convert(nvarchar, hspd.Start_Dtime, 111) AS StartDtime 
        ,convert(nvarchar, hspd.End_Dtime, 111) AS EndDtime 
        ,hspd.[EFFECT_HOUR]
        ,hspd.[Week_List]
        ,hspd.[HOTEL_ID]
        ,hspd.[HOTEL_ID] AS HOTELID
        ,hspd.[RATE_CODE]
        ,hspd.[ROOM_TYPE_CODE] AS ROOMCODE
        ,hspd.[ROOM_TYPE_NAME] + '[' + hspd.[ROOM_TYPE_CODE] + ']' AS ROOM
        ,hspd.[STATUS] AS PDSTATUS
        ,CASE WHEN hspd.[STATUS] = 'false' THEN '关闭' when hspd.[STATUS] = 'true' then '可用' ELSE '' END AS PDSTATUSDIS
        ,hspd.[ROOM_NUM]
        ,hspd.[IS_RESERVE] AS ISRESERVE
        ,hspd.[ONE_PRICE]
        ,hspd.[TWO_PRICE]
        ,hspd.[THREE_PRICE]
        ,hspd.[FOUR_PRICE]
        ,hspd.[ATTN_PRICE]
        ,hspd.[NET_PRICE]
        ,hspd.[BREAKFAST_NUM]
        ,hspd.[EACH_BREAKFAST_PRICE]
        ,CASE WHEN hspd.[IS_NETWORK] = 'true' THEN '含' ELSE '不含' END AS ISNETWORK
        ,hspd.[OFFSETVAL]
        ,hspd.[OFFSETUNIT] AS PDOFFSETUNIT
        ,CASE WHEN hspd.[OFFSETUNIT] = '0' THEN '整数' when hspd.[OFFSETUNIT] = '1' then '百分数' ELSE '' END AS OFFSETUNITDIS
        ,hspd.[GUAID]
        ,hspd.[CXLID]
        ,hspd.[SOURCE]
        FROM [CMS].[dbo].[HotelSalesPlanManager] TT
        left join [CMS].[dbo].[HotelSalesPlanManager_Detail] hspd
        on hspd.HPID=TT.nid
        where 
        TT.nid= @PlanID
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CreateSalesPlanEvent" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [CMS].[dbo].[HotelSalesPlanManager]
           ([Type]
           ,[Plan_Time]
           ,[Plan_DTime]
           ,[Start_Dtime]
           ,[End_Dtime]
           ,[Week_List]
           ,[Status]
           ,[Action]
           ,[Create_User]
           ,[Create_Time]
           ,[Update_User]
           ,[Update_Time])
     VALUES
           (@Type
           ,@Plan_Time
           ,@Plan_DTime
           ,@Start_Dtime
           ,@End_Dtime
           ,@Week_List
           ,@CStatus
           ,@CAction
           ,@Create_User
           ,getdate()
           ,@Create_User
           ,getdate());
       SET @PlanID = SCOPE_IDENTITY()
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="Int32" direction="Output" />
      <param name="@Type" dbType="String" />
      <param name="@Plan_Time" dbType="String" />
      <param name="@Plan_DTime" dbType="String" />
      <param name="@Start_Dtime" dbType="String" />
      <param name="@End_Dtime" dbType="String" />
      <param name="@Week_List" dbType="String" />
      <param name="@Create_User" dbType="String" />
      <param name="@CStatus" dbType="String" />
      <param name="@CAction" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CreateSalesPlanEventJobList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [CMS].[dbo].[HotelSalesPlanManager_Job]
           ([HPID]
           ,[Type]
           ,[Plan_DTime]
           ,[Status]
           ,[Action]
           ,[Action_Time]
           ,[Result]
           ,[Create_User]
           ,[Create_Time]
           ,[Update_User]
           ,[Update_Time]
           )
     VALUES
           (@PlanID
           ,@Type
           ,@Plan_DTime
           ,@CStatus
           ,@CAction
           ,null
           ,''
           ,@Create_User
           ,getdate()
           ,null
           ,null)
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@Type" dbType="String" />
      <param name="@Plan_DTime" dbType="String" />
      <param name="@Create_User" dbType="String" />
      <param name="@CStatus" dbType="String" />
      <param name="@CAction" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanEventJobList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        Update [CMS].[dbo].[HotelSalesPlanManager_Job]
           set 
           [Status] = @Status
           ,[Update_User] = @Update_User
           ,[Update_Time] = getdate()
          where [HPID] = @PlanID
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@Status" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanEventJobStatus" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        Update [CMS].[dbo].[HotelSalesPlanManager_Job]
           set 
           [Action_Time] = getdate()
           ,[Result] = @ActResult
           ,[Update_User] = @Update_User
           ,[Update_Time] = getdate()
          where [HPID] = @PlanID
        
        Update [CMS].[dbo].[HotelSalesPlanManager]
           set 
           [Action_Time] = getdate()
           ,[Result] = @ActResult
           ,[Update_User] = @Update_User
           ,[Update_Time] = getdate()
          where nid = @PlanID
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@ActResult" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanEventJobListForTime" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        Update [CMS].[dbo].[HotelSalesPlanManager_Job]
          set 
          [Status] = @Status
          ,[Update_User] = @Update_User
          ,[Update_Time] = getdate()
        where [HPID] = @PlanID AND @ActionStart <= Plan_DTime AND Status='1'
        AND Action = '0'
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@ActionStart" dbType="String" />
      <param name="@Status" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CheckSalesPlanEventJobAction" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [nid]
        ,[HPID]
        ,[Type]
        ,[Plan_DTime]
        ,[Status]
        ,[Action]
        ,[Action_Time]
        ,[Result]
        ,[Create_User]
        ,[Create_Time]
        ,[Update_User]
        ,[Update_Time]
        FROM [CMS].[dbo].[HotelSalesPlanManager_Job]
        where 
        [HPID]=@PlanID
        AND @ActionStart <= Plan_DTime
        AND Plan_DTime <= @ActionEnd
        AND Status='1'
        AND Action = '0'
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@ActionStart" dbType="String" />
      <param name="@ActionEnd" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CreateSalesPlanEventDetail" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [CMS].[dbo].[HotelSalesPlanManager_Detail]
           ([HPID]
           ,[Start_Dtime]
           ,[End_Dtime]
           ,[EFFECT_HOUR]
           ,[Week_List]
           ,[HOTEL_ID]
           ,[RATE_CODE]
           ,[MONEY_TYPE]
           ,[GUAID]
           ,[CXLID]
           ,[ROOM_TYPE_NAME]
           ,[ROOM_TYPE_CODE]
           ,[STATUS]
           ,[ROOM_NUM]
           ,[IS_RESERVE]
           ,[ONE_PRICE]
           ,[TWO_PRICE]
           ,[THREE_PRICE]
           ,[FOUR_PRICE]
           ,[ATTN_PRICE]
           ,[NET_PRICE]
           ,[BREAKFAST_NUM]
           ,[EACH_BREAKFAST_PRICE]
           ,[IS_NETWORK]
           ,[OFFSETVAL]
           ,[OFFSETUNIT]
           ,[SOURCE]
           ,[Create_User]
           ,[Create_Time]
           ,[Update_User]
           ,[Update_Time])
     VALUES
           (@HPID
           ,@Start_Dtime
           ,@End_Dtime
           ,@EffHour
           ,@Week_List
           ,@HOTEL_ID
           ,@RATE_CODE
           ,@MONEY_TYPE
           ,@GUAID
           ,@CXLID
           ,@ROOM_TYPE_NAME
           ,@ROOM_TYPE_CODE
           ,@STATUS
           ,@ROOM_NUM
           ,@IS_RESERVE
           ,@ONE_PRICE
           ,@TWO_PRICE
           ,@THREE_PRICE
           ,@FOUR_PRICE
           ,@ATTN_PRICE
           ,@NETPRICE
           ,@BREAKFAST_NUM
           ,@EACH_BREAKFAST_PRICE
           ,@IS_NETWORK
           ,@OFFSETVAL
           ,@OFFSETUNIT
           ,@SUPPLIER
           ,@Create_User
           ,getdate()
           ,@Create_User
           ,getdate())
       ]]>
    </commandText>
    <parameters>
      <param name="@HPID" dbType="String" />
      <param name="@Start_Dtime" dbType="String" />
      <param name="@End_Dtime" dbType="String" />
      <param name="@EffHour" dbType="String" />
      <param name="@Week_List" dbType="String" />
      <param name="@HOTEL_ID" dbType="String" />
      <param name="@RATE_CODE" dbType="String" />
      <param name="@MONEY_TYPE" dbType="String" />
      <param name="@GUAID" dbType="String" />
      <param name="@CXLID" dbType="String" />
      <param name="@ROOM_TYPE_NAME" dbType="String" />
      <param name="@ROOM_TYPE_CODE" dbType="String" />
      <param name="@STATUS" dbType="String" />
      <param name="@ROOM_NUM" dbType="String" />
      <param name="@IS_RESERVE" dbType="String" />
      <param name="@ONE_PRICE" dbType="String" />
      <param name="@TWO_PRICE" dbType="String" />
      <param name="@THREE_PRICE" dbType="String" />
      <param name="@FOUR_PRICE" dbType="String" />
      <param name="@ATTN_PRICE" dbType="String" />
      <param name="@BREAKFAST_NUM" dbType="String" />
      <param name="@EACH_BREAKFAST_PRICE" dbType="String" />
      <param name="@IS_NETWORK" dbType="String" />
      <param name="@OFFSETVAL" dbType="String" />
      <param name="@OFFSETUNIT" dbType="String" />
      <param name="@Create_User" dbType="String" />
      <param name="@NETPRICE" dbType="String" />
      <param name="@SUPPLIER" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanEventStatus" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [CMS].[dbo].[HotelSalesPlanManager]
         SET [Status]='2'
            ,[Action]='1'
            ,[Result]=@Result
            ,[Update_User]=@Update_User
            ,[Update_Time]=getdate()
            ,Action_Time=getdate()
       WHERE nid = @HPID
       ]]>
    </commandText>
    <parameters>
      <param name="@HPID" dbType="String" />
      <param name="@Result" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanDetailStatus" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
       UPDATE [CMS].[dbo].[HotelSalesPlanManager]
         SET [Status]=@Status
            ,[Update_User]=@Update_User
            ,[Update_Time]=getdate()
       WHERE nid = @PlanID AND [Status] <> '2'
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
      <param name="@Status" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        Update [CMS].[dbo].[HotelSalesPlanManager]
           set [Plan_Time] = @Plan_Time
           ,[Plan_DTime] = @Plan_DTime
           ,[Start_Dtime] = @Start_Dtime
           ,[End_Dtime] = @End_Dtime
           ,[Week_List] = @Week_List
           ,[Status] = @Status
           ,[Update_User] = @Update_User
           ,[Update_Time] = getdate()
       where nid = @PlanID
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String"/>
      <param name="@Type" dbType="String" />
      <param name="@Plan_Time" dbType="String" />
      <param name="@Plan_DTime" dbType="String" />
      <param name="@Start_Dtime" dbType="String" />
      <param name="@End_Dtime" dbType="String" />
      <param name="@Week_List" dbType="String" />
      <param name="@Status" dbType="String" />
      <param name="@Update_User" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateSalesPlanEventDetail" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        update [CMS].[dbo].[HotelSalesPlanManager_Detail]
        set
        [Start_Dtime]		= @Start_Dtime         
        ,[End_Dtime]			= @End_Dtime           
        ,[EFFECT_HOUR] = @EffHour
        ,[Week_List]			= @Week_List           
        ,[HOTEL_ID]			= @HOTEL_ID            
        ,[RATE_CODE]			= @RATE_CODE           
        ,[MONEY_TYPE]		= @MONEY_TYPE          
        ,[GUAID]			= @GUAID               
        ,[CXLID]			= @CXLID               
        ,[ROOM_TYPE_NAME]		= @ROOM_TYPE_NAME      
        ,[ROOM_TYPE_CODE]		= @ROOM_TYPE_CODE      
        ,[STATUS]			= @STATUS              
        ,[ROOM_NUM]			= @ROOM_NUM            
        ,[IS_RESERVE]		= @IS_RESERVE          
        ,[ONE_PRICE]			= @ONE_PRICE           
        ,[TWO_PRICE]			= @TWO_PRICE           
        ,[THREE_PRICE]		= @THREE_PRICE         
        ,[FOUR_PRICE]		= @FOUR_PRICE          
        ,[ATTN_PRICE]		= @ATTN_PRICE          
        ,[NET_PRICE]		= @NETPRICE          
        ,[BREAKFAST_NUM]		= @BREAKFAST_NUM       
        ,[EACH_BREAKFAST_PRICE]	= @EACH_BREAKFAST_PRICE
        ,[IS_NETWORK]		= @IS_NETWORK          
        ,[OFFSETVAL]			= @OFFSETVAL           
        ,[OFFSETUNIT]		= @OFFSETUNIT          
        ,[SOURCE]		= @SOURCE
        ,[Update_User]		= @Update_User
        ,[Update_Time]		= getdate()
        where  [HPID]			=@HPID   
       ]]>
    </commandText>
    <parameters>
      <param name="@HPID" dbType="String" />
      <param name="@Start_Dtime" dbType="String" />
      <param name="@End_Dtime" dbType="String" />
      <param name="@EffHour" dbType="String" />
      <param name="@Week_List" dbType="String" />
      <param name="@HOTEL_ID" dbType="String" />
      <param name="@RATE_CODE" dbType="String" />
      <param name="@MONEY_TYPE" dbType="String" />
      <param name="@GUAID" dbType="String" />
      <param name="@CXLID" dbType="String" />
      <param name="@ROOM_TYPE_NAME" dbType="String" />
      <param name="@ROOM_TYPE_CODE" dbType="String" />
      <param name="@STATUS" dbType="String" />
      <param name="@ROOM_NUM" dbType="String" />
      <param name="@IS_RESERVE" dbType="String" />
      <param name="@ONE_PRICE" dbType="String" />
      <param name="@TWO_PRICE" dbType="String" />
      <param name="@THREE_PRICE" dbType="String" />
      <param name="@FOUR_PRICE" dbType="String" />
      <param name="@ATTN_PRICE" dbType="String" />
      <param name="@BREAKFAST_NUM" dbType="String" />
      <param name="@EACH_BREAKFAST_PRICE" dbType="String" />
      <param name="@IS_NETWORK" dbType="String" />
      <param name="@OFFSETVAL" dbType="String" />
      <param name="@OFFSETUNIT" dbType="String" />
      <param name="@Update_User" dbType="String" />
      <param name="@NETPRICE" dbType="String" />
      <param name="@SOURCE" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ReviewSalesPlanDetailHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [nid]
            ,[USERID]
            ,[USERNAME]
            ,[IPADDRESS]
            ,[CREATEDATE]
            ,[EVENT_TYPE]
            ,[EVENT_ID]
            ,[EVENT_CONTENT]
            ,[EVENT_RESULT]
        FROM [CMS].[dbo].[WebSiteEvent_History]
        where EVENT_ID= @PlanID AND [EVENT_TYPE] like '%酒店销售计划%' AND [EVENT_TYPE] <> '酒店销售计划-JOB'
        order by CREATEDATE desc
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ReviewSalesPlanDetailHistory_back" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT
        TT.[nid] AS PLANID
        ,TT.[Type] AS SAVETYPE
        ,CASE WHEN TT.[Type] = '0' THEN '立即保存' when TT.[Type] = '1' then '定时保存' when TT.[Type] = '2' then '每日自动更新' ELSE '' END AS SAVETYPENM
        ,CASE WHEN TT.[Type] = '0' THEN convert(nvarchar, TT.[Plan_Time], 120) when TT.[Type] = '1' then convert(nvarchar, TT.[Plan_DTime] , 120) when TT.[Type] = '2' then convert(nvarchar, TT.[Plan_Time], 120) ELSE '' END AS PLANTIME
        ,TT.[Plan_Time]
        ,convert(nvarchar, TT.[Plan_DTime] , 120)AS PLANDTIME
        ,convert(nvarchar, TT.[Start_Dtime], 111) AS PLANSTART
        ,convert(nvarchar, TT.[End_Dtime], 111) AS PLANEND
        ,TT.[Week_List] AS PLANWEEK
        ,CASE WHEN TT.[Status] = '0' THEN '无效' when TT.[Status] = '1' then '有效' when TT.[Status] ='2' then '失效' ELSE '' END AS STATUSDIS
        ,TT.[Status]
        ,TT.[Action]
        ,TT.[Result]
        ,TT.[Create_User] AS CREATEUSER
        ,TT.[Create_Time] AS CREATETIME
        ,TT.[Update_User] 
        ,wh.USERNAME AS UPDATEUSER
        ,TT.[Update_Time] 
        ,wh.CREATEDATE AS UPDATETIME
        FROM [CMS].[dbo].[HotelSalesPlanManager] TT
        left join (select * from [CMS].[dbo].[WebSiteEvent_History] where EVENT_ID= @PlanID AND [EVENT_TYPE] like '%酒店销售计划%') wh on wh.EVENT_ID= TT.nid
        where 
        TT.nid= @PlanID 
        order by wh.CREATEDATE desc
       ]]>
    </commandText>
    <parameters>
      <param name="@PlanID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertRoomSaveHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
          INSERT INTO [CMS].[dbo].[LMTROOM_History]
           ([HOTEL_ID]
           ,[ROOM_CODE]
           ,[ROOM_NAME]
           ,[BED_TYPE]
           ,[MAX_GUEST]
           ,[IS_WINDOW]
           ,[GUEST_TYPE]
           ,[NETWORK]
           ,[ROOM_AREA]
           ,[IS_NOSMOKE]
           ,[STATUS]
           ,[CREATE_TIME]
           ,[CREATE_USER])
     VALUES
           (@HOTELID
           ,@ROOMCODE
           ,@ROOMNAME
           ,@BEDTYPE
           ,@MAXGUEST
           ,@ISWINDOW
           ,@GUESTTYPE
           ,@RNETWORK
           ,@ROOMAREA
           ,@ISNOSMOKE
           ,@RSTATUS
           ,getdate()
           ,@CREATEUSER)
       ]]>
    </commandText>
    <parameters>
      <param name="@HOTELID" dbType="String" />
      <param name="@ROOMCODE" dbType="String" />
      <param name="@ROOMNAME" dbType="String" />
      <param name="@BEDTYPE" dbType="String" />
      <param name="@MAXGUEST" dbType="String" />
      <param name="@ISWINDOW" dbType="String" />
      <param name="@GUESTTYPE" dbType="String" />
      <param name="@RNETWORK" dbType="String" />
      <param name="@ROOMAREA" dbType="String" />
      <param name="@ISNOSMOKE" dbType="String" />
      <param name="@RSTATUS" dbType="String" />
      <param name="@CREATEUSER" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetHotelRoomHistoryList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT [nid]
          ,[HOTEL_ID]
          ,[ROOM_CODE]
          ,[ROOM_NAME] AS ROOMNM
          ,[ROOM_DESC]
          ,[BED_TYPE] AS BED
          ,CASE WHEN [MAX_GUEST]  = '1' THEN '一人' when [MAX_GUEST]  = '2' then '二人' when [MAX_GUEST]  = '3' then '三人' when [MAX_GUEST]  = '4' then '四人' when [MAX_GUEST]  = '5' then '五人' when [MAX_GUEST]  = '6' then '六人' when [MAX_GUEST]  = '7' then '七天' when [MAX_GUEST]  = '8' then '八人' when [MAX_GUEST]  = '9' then '九人' when [MAX_GUEST]  = '10' then '十人' ELSE '' END AS GUEST
          ,CASE WHEN [IS_WINDOW] = '0' THEN '无窗' when [IS_WINDOW] = '1' then '有窗' when [IS_WINDOW] = '2' then '部分有窗' ELSE '' END AS WINDOW
          ,CASE WHEN [GUEST_TYPE] = '0' THEN '无限制' when [GUEST_TYPE] = '1' then '只可内宾' when [GUEST_TYPE] = '2' then '只可外宾' ELSE '' END AS GUESTYPE
          ,[FLOOR]
          ,CASE WHEN [NETWORK] = '无' THEN '无宽带' when [NETWORK] = '有线' then '有线' when [NETWORK] = 'wifi' then 'WIFI' ELSE '' END AS WLAN
          ,[ROOM_AREA] AS ROOMAREA
          ,CASE WHEN [IS_NOSMOKE] = '0' THEN '未区分' when [IS_NOSMOKE] = '1' then '无烟房' when [IS_NOSMOKE] = '2' then '无烟处理' ELSE '' END AS NOSMOKE
          ,CASE WHEN [STATUS] = '0' THEN '下线' when [STATUS] = '1' then '上线' ELSE '' END AS STATUSDIS
          ,[CREATE_TIME] AS UPDATETIME
          ,[CREATE_USER] AS UPDATEUSER
      FROM [CMS].[dbo].[LMTROOM_History]
      where [HOTEL_ID]=@HotelID AND [ROOM_CODE]=@RoomCode
      order by [CREATE_TIME] desc
       ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
      <param name="@RoomCode" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultRoomHistoryList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [nid]
            ,[CityID]
            ,[HotelID]
            ,[PlanDate]
            ,[PriceCode]
            ,[RoomCode]
            ,[TwoPrice]
            ,[RoomNum]
            ,case [Status]
            when 'true' then '开启'
            else '关闭' end  as [Status]
            ,[Remark]
            ,case [IsReserve]
            when '0' then '是'
            else '否' end  as IsReserve
            ,[Create_User]
            ,[Create_Time]
        FROM [CMS].[dbo].[ConsultRoom_History]
        WHERE CityID=@CityID 
              and HotelID=@HotelID  
              and PriceCode=@PriceCode 
              and RoomCode=@RoomCode 
              and PlanDate=@PlanDate
        order by  nid desc
       ]]>
    </commandText>
    <parameters>
      <param name="@CityID" dbType="String" />
      <param name="@HotelID" dbType="String" />
      <param name="@PriceCode" dbType="String" />
      <param name="@RoomCode" dbType="String" />
      <param name="@PlanDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetHasChangedConsultRoomList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select hotelid,max(Create_Time)  as CreateTime,min(convert(datetime, PlanDate, 111)) as PlanDate from ConsultRoom_History
      WHERE Create_Time between convert(varchar(10), GETDATE(), 120)+' 04:00:00' and  convert(varchar(10), GETDATE()+1, 120)+' 04:00:00'
      and convert(datetime, PlanDate, 120)>=convert(datetime, convert(varchar(10), GETDATE(), 120),120)
      group by hotelid
     ]]>
    </commandText>
    <parameters>
      <param name="@CreateUser" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultRoomHistoryByHotelID" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT TOP 1 [nid]
      ,[CityID]
      ,[HotelID]
      ,[PlanDate]
      ,[PriceCode]
      ,[RoomCode]
      ,[TwoPrice]
      ,[RoomNum]
      ,[Status]
      ,[Remark]
      ,[IsReserve]
      ,[Create_User]
      ,[Create_Time]
  FROM [CMS].[dbo].[ConsultRoom_History] where [HotelID]=@HOTELID order by [Create_Time] desc
     ]]>
    </commandText>
    <parameters>
      <param name="@HOTELID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertHotelEX" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
    INSERT INTO [CMS].[dbo].[HotelEXInformation_History]
           ([HotelID]
           ,[type]
           ,[status]
           ,[LinkMan]
           ,[LinkTel]
           ,[LinkFax]
           ,[LinkMail]
           ,[ExTime]
           ,[ExMode]
           ,[Remark]
           ,[opeTime]
           ,[opeUser])
     VALUES
           (@HOTELID
           ,@TYPE
           ,@STATUS
           ,@LINKMAN
           ,@LINKTEL
           ,@LINKFAX 
           ,@LINKMAIL
           ,@EXTIME
           ,@EXMODE
           ,@REMARK 
           ,GETDATE()
           ,@OPEUSER)
     ]]>
    </commandText>
    <parameters>
      <param name="@HOTELID" dbType="String" />
      <param name="@TYPE" dbType="String" />
      <param name="@STATUS" dbType="String" />
      <param name="@LINKMAN" dbType="String" />
      <param name="@LINKTEL" dbType="String" />
      <param name="@LINKFAX" dbType="String" />
      <param name="@LINKMAIL" dbType="String" />
      <param name="@EXTIME" dbType="String" />
      <param name="@EXMODE" dbType="String" />
      <param name="@REMARK" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
    </parameters>
  </dataCommand>






















  <dataCommand name="GetSalesMangeListSelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT csu.[User_Account] as UserAccount,csu.User_DspName as UserDspName,'['+csu.[User_Account]+']'+csu.User_DspName AS REVALUE_ALL
      FROM [CMS].[dbo].[CMS_SYS_USERS] csu
      inner join dbo.CMS_SYS_USER_ELEMENT csue
      on csu.[User_Account] = csue.[User_Account] and csue.[Role_ID]=@RoleID
      order by csu.[User_Account] asc
      ]]>
    </commandText>
    <parameters>
      <param name="@RoleID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultRoomByTimeAndUserManagerHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select * from ConsultRoom18Checked_History where convert(varchar(10),checkTime , 120)=@CHECKTIME and checkUserName=@CHECKUSERNAME and type=0
     ]]>
    </commandText>
    <parameters>
      <param name="@CHECKTIME" dbType="String" />
      <param name="@CHECKUSERNAME" dbType="String" />
    </parameters>
  </dataCommand>


  <dataCommand name="GetAllCityByTimeManagerHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select * from ConsultRoom18Checked_History 
      where convert(varchar(10),checkTime , 120)=@CHECKTIME and type=1
     ]]>
    </commandText>
    <parameters>
      <param name="@CHECKTIME" dbType="String" />
    </parameters>
  </dataCommand>

  

  <dataCommand name="GetConsultRoomByTimeManagerHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select COUNT(hotelId) as HTSUM,checkUserName from ConsultRoom18Checked_History 
      where convert(varchar(10),checkTime , 120)=@CHECKTIME and type=0 
      group by checkUserName
     ]]>
    </commandText>
    <parameters>
      <param name="@CHECKTIME" dbType="String" />
    </parameters>
  </dataCommand>
 
  <dataCommand name="GetConsultPeopleByManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select distinct Create_User from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10),@StartDate , 120)+' 04:00:00' 
      and  convert(varchar(10), @EndDate, 120)+' 04:00:00' 
     ]]>
    </commandText>
    <parameters>
      <param name="@StartDate" dbType="String" />
      <param name="@EndDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetEXDConsultHotelCountLogsByManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select COUNT(*) as EXD,s.Create_User from (
      select distinct HotelID,Create_User from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10), @StartDate, 120)+' 04:00:00' 
      and  convert(varchar(10), @EndDate, 120)+' 04:00:00'
      ) s
      group by Create_User
     ]]>
    </commandText>
    <parameters>
      <param name="@StartDate" dbType="String" />
      <param name="@EndDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultHotelsByManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select distinct HotelID from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10), @StartDate, 120)+' 04:00:00' 
      and  convert(varchar(10), @EndDate, 120)+' 04:00:00' 
     ]]>
    </commandText>
    <parameters>
      <param name="@StartDate" dbType="String" />
      <param name="@EndDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultHotelsBySales" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select distinct HotelID,Create_User from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10), @StartDate, 120)+' 04:00:00' 
      and  convert(varchar(10), @EndDate, 120)+' 04:00:00' 
      and Create_User=@SalesID
     ]]>
    </commandText>
    <parameters>
      <param name="@SalesID" dbType="String" />
      <param name="@StartDate" dbType="String" />
      <param name="@EndDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetConsultHotelLogs" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select * from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10), GETDATE()-3, 120)+' 04:00:00' 
      and  convert(varchar(10), GETDATE()+1, 120)+' 04:00:00' 
     ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <dataCommand name="GetCheck18EXDConsultHotelCountLogsByManager" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select COUNT(*) as EXD,s.Create_User from (
      select distinct HotelID,Create_User,max(Create_Time) as CreateTime from  dbo.ConsultRoom_History 
      where Create_Time between convert(varchar(10),  @StartDate, 120)+' 18:00:00' 
      and  convert(varchar(10),  @EndDate, 120)+' 04:00:00'
      group by hotelid,Create_User
      ) s
      group by Create_User
     ]]>
    </commandText>
    <parameters>
      <param name="@StartDate" dbType="String" />
      <param name="@EndDate" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetHotelComparisonTodaySelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(4000)
        DECLARE @CountSql NVARCHAR(4000)
        SET @SelectSql=N'
        SELECT
          TT.RowId
          ,TT.Hotel_ID
          ,TT.Hotel_Name
          ,TT.Room_Code
          ,TT.Room_Name
          ,TT.DType
          ,TT.DValue
          ,TT.Two_Price
          ,TT.Mapping_Price
          ,TT.Act_Price
          ,TT.Update_time
          ,TT.User_DspName
          ,TT.ActCut
          ,CASE when TT.[DType] = ''0'' then ''未折扣'' when TT.[DType] = ''1'' then ''固定折扣'' when TT.[DType] = ''2'' then ''固定价格''  ELSE '''' END AS DTypeNM
            FROM (
            SELECT ROW_NUMBER() OVER(ORDER BY hcp.[Create_Time] asc) AS RowId
              ,hcp.[Hotel_ID]
			  ,hcp.[Hotel_Name]
			  ,hcp.[Room_Code]
			  ,hcp.[Room_Name]
			  ,hcp.[Mapping_Hotel]
			  ,hcp.[Mapping_Room]
			  ,hcp.[City_ID]
			  ,hcp.[MPType]
			  ,hcp.[DType]
			  ,hcp.[DValue]
			  ,hcp.[Two_Price]
			  ,hcp.[Mapping_Price]
			  ,hcp.[Act_Price]
			  ,hcp.[Status]
        ,hcp.[Update_time]
			  ,csu.User_DspName
        ,convert(nvarchar(20), cast(round(convert(decimal(8,2), hcp.[Two_Price]) / convert(decimal(8,2),hcp.[Mapping_Price]),2) as numeric(8,2)) * 100 ) + ''%'' AS ActCut
			FROM [CMS].[dbo].[HotelComparison] hcp 
			left join dbo.HotelSalesManager hsm
			on hcp.[Hotel_ID]=hsm.Hotel_ID
			left join dbo.CMS_SYS_USERS csu
			on csu.[User_Account]=hsm.User_Account
			where hsm.[Status]=''1'' AND hcp.[Status]=''1'' AND
			((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
			((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
			((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
      ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
			((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
			((@DSourceData IS NULL) OR 
			(@DSourceData = ''1'' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
			OR (@DSourceData = ''2'' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))        
        ) TT
        WHERE  TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

        SET @CountSql = N'SELECT @TotalCount=COUNT(hcp.[nid])
		    FROM [CMS].[dbo].[HotelComparison] hcp 
		    left join dbo.HotelSalesManager hsm
		    on hcp.[Hotel_ID]=hsm.Hotel_ID
		    left join dbo.CMS_SYS_USERS csu
		    on csu.[User_Account]=hsm.User_Account
		    where hsm.[Status]=''1'' AND hcp.[Status]=''1'' AND
		    ((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
		    ((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
		    ((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
        ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
		    ((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
		    ((@DSourceData IS NULL) OR 
		    (@DSourceData = ''1'' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
		    OR (@DSourceData = ''2'' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))'
      EXEC sp_executesql @SelectSql,
        N'@HotelID NVARCHAR(100),
          @CityID NVARCHAR(100),
          @Sales NVARCHAR(100),
          @Discount NVARCHAR(100),
          @DSourceType NVARCHAR(100),
          @DSourceData NVARCHAR(100),
          @PageSize INT,
          @PageCurrent INT',
          @HotelID,
          @CityID,
          @Sales,
          @Discount,
          @DSourceType,
          @DSourceData,
          @PageSize,
          @PageCurrent
        EXEC sp_executesql @CountSql,
        N'@HotelID NVARCHAR(100),
          @CityID NVARCHAR(100),
          @Sales NVARCHAR(100),
          @Discount NVARCHAR(100),
          @DSourceType NVARCHAR(100),
          @DSourceData NVARCHAR(100),
          @TotalCount INT OUTPUT',
          @HotelID,
          @CityID,
          @Sales,
          @Discount,
          @DSourceType,
          @DSourceData,
          @TotalCount OUTPUT
       ]]>
    </commandText>
    <parameters>
      <param name="@TotalCount" dbType="Int32" direction="Output" />
      <param name="@HotelID" dbType="String" />
      <param name="@CityID" dbType="String" />
      <param name="@Sales" dbType="String" />
      <param name="@Discount" dbType="String" />
      <param name="@DSourceType" dbType="String" />
      <param name="@DSourceData" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetHotelComparisonTodayExport" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT
          hcp.[Hotel_ID] AS 酒店ID
          ,hcp.[Hotel_Name] AS 酒店名称
          ,hcp.[Room_Code] AS 房型ID
          ,hcp.[Room_Name] AS 房型名称
          ,hcp.[Mapping_Hotel] AS 绑定酒店ID
          ,hcp.[Mapping_Room] AS 绑定房型ID
          ,hcp.[City_ID] AS 城市ID
          ,hcp.[MPType] AS 绑定供应商
          ,CASE when hcp.[DType] = '0' then '未折扣' when hcp.[DType] = '1' then '固定折扣' when hcp.[DType] = '2' then '固定价格'  ELSE '' END AS 合同折扣
          ,hcp.[DValue] AS 折扣
          ,hcp.[Two_Price] AS LM今日价格
          ,hcp.[Mapping_Price] AS 供应商价格
          ,hcp.[Act_Price] AS 实际比较价格
          ,csu.User_DspName AS 销售人员
          ,convert(nvarchar(20), cast(round(convert(decimal(8,2), hcp.[Two_Price]) / convert(decimal(8,2),hcp.[Mapping_Price]),2) as numeric(8,2)) * 100 ) + '%' AS 实际LM折扣
        FROM [CMS].[dbo].[HotelComparison] hcp 
        left join dbo.HotelSalesManager hsm
        on hcp.[Hotel_ID]=hsm.Hotel_ID
        left join dbo.CMS_SYS_USERS csu
        on csu.[User_Account]=hsm.User_Account
        where hsm.[Status]='1' AND hcp.[Status]='1' AND
        ((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
        ((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
        ((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
        ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
        ((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
        ((@DSourceData IS NULL) OR 
        (@DSourceData = '1' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
        OR (@DSourceData = '2' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))
       ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
      <param name="@CityID" dbType="String" />
      <param name="@Sales" dbType="String" />
      <param name="@DSourceType" dbType="String" />
      <param name="@DSourceData" dbType="String" />
      <param name="@Discount" dbType="String" />
    </parameters>
  </dataCommand>


  <dataCommand name="GetHotelComparisonTodayMasterSelect" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
        select 
      dtb.BHLID,dtb.BRMCD,
      dtc.LHLID,dtc.LRMCD,
      dtd.DHLID,dtd.DRMCD
      from
      (
      select count(distinct hcp.Hotel_ID) AS BHLID, count(hcp.Room_Code) AS BRMCD from [dbo].[HotelComparison] hcp
      left join dbo.HotelSalesManager hsm
      on hcp.[Hotel_ID]=hsm.Hotel_ID
      left join dbo.CMS_SYS_USERS csu
      on csu.[User_Account]=hsm.User_Account
      where hsm.[Status]='1' AND hcp.[Status]='1' AND 
      ((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
      ((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
      ((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
      ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
      ((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
      ((@DSourceData IS NULL) OR 
      (@DSourceData = '1' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
      OR (@DSourceData = '2' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))
      and convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5
      ) dtb
      ,
      (
      select count(distinct hcp.Hotel_ID) AS LHLID, count(hcp.Room_Code) AS LRMCD from [dbo].[HotelComparison] hcp
      left join dbo.HotelSalesManager hsm
      on hcp.[Hotel_ID]=hsm.Hotel_ID
      left join dbo.CMS_SYS_USERS csu
      on csu.[User_Account]=hsm.User_Account
      where hsm.[Status]='1' AND hcp.[Status]='1' AND 
      ((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
      ((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
      ((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
      ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
      ((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
      ((@DSourceData IS NULL) OR 
      (@DSourceData = '1' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
      OR (@DSourceData = '2' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))
      and convert(decimal(8,2),  hcp.[Two_Price]) < convert(decimal(8,2),  hcp.[Act_Price])
      ) dtc
      ,
      (
      select count(distinct hcp.Hotel_ID) AS DHLID, count(hcp.Room_Code) AS DRMCD from [dbo].[HotelComparison]  hcp
      left join dbo.HotelSalesManager hsm
      on hcp.[Hotel_ID]=hsm.Hotel_ID
      left join dbo.CMS_SYS_USERS csu
      on csu.[User_Account]=hsm.User_Account
      where hsm.[Status]='1' AND hcp.[Status]='1' AND 
      ((@HotelID IS NULL) OR (hcp.Hotel_ID = @HotelID)) AND 
      ((@CityID IS NULL) OR (hcp.City_ID = @CityID)) AND 
      ((@Sales IS NULL) OR (hsm.User_Account = @Sales)) AND 
      ((@Discount IS NULL) OR (hcp.[DType] = @Discount)) AND 
      ((@DSourceType IS NULL) OR (hcp.[MPType] = @DSourceType)) AND 
      ((@DSourceData IS NULL) OR 
      (@DSourceData = '1' AND convert(decimal(8,2), hcp.[Two_Price]) > convert(decimal(8,2), hcp.[Act_Price]) + 5) 
      OR (@DSourceData = '2' AND convert(decimal(8,2), hcp.[Two_Price]) < convert(decimal(8,2), hcp.[Act_Price])))
      and convert(decimal(8,2), hcp.[Two_Price]) >= convert(decimal(8,2), hcp.[Act_Price])
      and convert(decimal(8,2), hcp.[Two_Price]) <= convert(decimal(8,2), hcp.[Act_Price]) + 5
      ) dtd
       ]]>
    </commandText>
    <parameters>
      <param name="@HotelID" dbType="String" />
      <param name="@CityID" dbType="String" />
      <param name="@Sales" dbType="String" />
      <param name="@DSourceType" dbType="String" />
      <param name="@DSourceData" dbType="String" />
      <param name="@Discount" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetCmsSysUsersInfo" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT [User_UserID]
      ,[User_Account]
      ,[User_Pwd]
      ,[User_DspName]
      ,[User_HRID]
      ,[User_Email]
      ,[User_Tel]
      ,[User_JoinDate]
      ,[User_CostCenter]
      ,[User_Language]
      ,[User_Level]
      ,[User_Active]
      ,[User_Sex]
      ,[User_Birthday]
      ,[User_Title]
      ,[User_Education]
      ,[User_FirstName]
      ,[User_LastName]
      ,[Group_ID]
      ,[User_LineManager]
      ,[User_Department]
      ,[Create_Time]
      ,[Update_Time]
      ,[User_Creator]
      ,[User_SalesManager]
  FROM [CMS].[dbo].[CMS_SYS_USERS] where [User_Account]=@UserAccount
      ]]>
    </commandText>
    <parameters>
      <param name="@UserAccount" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ChkApproveOrderList" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT [EVENT_TYPE]
      ,[EVENT_FG_ID]
      ,[ACTION_ID]
      ,[OD_STATUS]
      ,[REMARK]
      ,[CANNEL]
      ,[EVENT_USER]
      ,[EVENT_TIME]
      ,[APPROVE_ID]
      ,[ROOM_ID]
      ,[OperateResult]
      ,ISNULL([ISDBAPPROVE],'0') AS ISDBAPPROVE FROM [CMS].[dbo].[LmOrderAction_History]
      where [EVENT_FG_ID] = @ORDERID AND [OD_STATUS] <> '备注' ORDER BY [EVENT_TIME] desc
      ]]>
    </commandText>
    <parameters>
      <param name="@ORDERID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetOrderManageSearchDataHistory" database="CMS" commandType="Text">
    <commandText>
      <![CDATA[
      select * from dbo.LmOrderAction_History 
      where EVENT_TYPE='订单确认' and EVENT_USER=@EVENTUSER 
      and (EVENT_TIME between @STARTDATE and @ENDDATE)
      order by nid
      ]]>
    </commandText>
    <parameters>
      <param name="@EVENTUSER" dbType="String" />
      <param name="@STARTDATE" dbType="String" />
      <param name="@ENDDATE" dbType="String" />
    </parameters>
  </dataCommand>

</dataOperations>