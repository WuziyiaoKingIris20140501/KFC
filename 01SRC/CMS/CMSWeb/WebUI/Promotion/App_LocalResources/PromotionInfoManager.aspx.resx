<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error1" xml:space="preserve">
    <value>信息标题不能为空，请修改！</value>
  </data>
  <data name="Error2" xml:space="preserve">
    <value>持续时间不能为空，请修改！</value>
  </data>
  <data name="Error3" xml:space="preserve">
    <value>促销类型不能为空，请修改！</value>
  </data>
  <data name="InsertSuccess" xml:space="preserve">
    <value>促销信息添加成功！</value>
  </data>
  <data name="UpdateError" xml:space="preserve">
    <value>促销信息更新失败！</value>
  </data>
  <data name="UpdateSuccess" xml:space="preserve">
    <value>促销信息更新成功！</value>
  </data>
  <data name="UpdateError2" xml:space="preserve">
    <value>促销信息更新失败，信息标题已存在！</value>
  </data>
  <data name="Error4" xml:space="preserve">
    <value>用户组不能为空，请修改！</value>
  </data>
  <data name="Error5" xml:space="preserve">
    <value>促销正文不能为空，请修改！</value>
  </data>
  <data name="OnlineType" xml:space="preserve">
    <value>online</value>
  </data>
  <data name="PriorityType" xml:space="preserve">
    <value>priority</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>促销信息添加失败！</value>
  </data>
  <data name="Error6" xml:space="preserve">
    <value>促销信息添加失败，该促销标题已存在，请修改！</value>
  </data>
  <data name="Error7" xml:space="preserve">
    <value>促销信息添加失败！</value>
  </data>
  <data name="EventInsertMessage" xml:space="preserve">
    <value>促销信息添加 -  促销标题：{0}  优先级：{1}  持续开始时间：{2}  持续结束时间：{3}  促销类型：{4}  类型内容：{5}  用户组：{6}  信息正文：{7}  相关图片ID：{8}</value>
  </data>
  <data name="Error8" xml:space="preserve">
    <value>信息标题不能超过15个中文字，请修改！</value>
  </data>
  <data name="PriceType" xml:space="preserve">
    <value>pricetype</value>
  </data>
  <data name="Error9" xml:space="preserve">
    <value>促销信息添加失败，该促销在相同时间、类型、优先级已存在，冲突促销：{0}   请修改！</value>
  </data>
  <data name="Error10" xml:space="preserve">
    <value>图片路径不能超过1000个字符，请修改！</value>
  </data>
  <data name="Error11" xml:space="preserve">
    <value>促销信息正文不能超过180个中文字，请修改！</value>
  </data>
  <data name="Error12" xml:space="preserve">
    <value>链接URL不能超过500个字符，请修改！</value>
  </data>
</root>