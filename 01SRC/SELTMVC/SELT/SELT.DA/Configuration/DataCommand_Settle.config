<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.hotelvp.com/DataOperation">
  
  <dataCommand name="ImportCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      INSERT INTO [dbo].[CollectHis]
           ([PAYMENTTYPE]
           ,[ACTUALAMOUNT]
           ,[ORIGINAMOUNT]
           ,[UPLOADUSER]
           ,[UPLOADDATE]
           ,[UPLOADFILENAME]
           ,[IMPORTTYPE]
           ,[TOTALCOUNT]
           ,[TOTALAMOUNT]
           ,[STATUS]
           ,[CREATEUSER]
           ,[CREATETIME]
           ,[UPDATEUSER]
           ,[UPDATETIME])
      VALUES
           (@PAYMENTTYPE
           ,0
           ,@TOTALAMOUNT
           ,@CREATEUSER
           ,getdate()
           ,@UPLOADFILENAME
           ,@IMPORTTYPE
           ,@TOTALCOUNT
           ,@TOTALAMOUNT
           ,'0'
           ,@CREATEUSER
           ,getdate()
           ,@CREATEUSER
           ,getdate())
      SET @CollectID = SCOPE_IDENTITY()
      ]]>
    </commandText>
    <parameters>
      <param name="@PAYMENTTYPE" dbType="String"/>
      <param name="@TOTALAMOUNT" dbType="String" />
      <param name="@CREATEUSER" dbType="String" />
      <param name="@UPLOADFILENAME" dbType="String" />
      <param name="@IMPORTTYPE" dbType="String" />
      <param name="@TOTALCOUNT" dbType="String" />
      <param name="@CollectID" dbType="Int32" direction="Output" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [dbo].[CollectHis]
        SET [ORIGINAMOUNT] = @TOTALAMOUNT
        ,[TOTALAMOUNT] = @TOTALAMOUNT
        WHERE COLLECTID = @COLLECTID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@TOTALAMOUNT" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ImportWriteOffList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      INSERT INTO [dbo].[WriteOffHis]
           ([COLLECTID]
           ,[DEALTIME]
           ,[PAYNAME]
           ,[PAYACCOUNT]
           ,[INTOAMOUNT]
           ,[DETAILSERIALNUM]
           ,[SUMMARY]
           ,[REMARK]
           ,[INTOSTATUS]
           ,[STATUS]
           ,[CREATEUSER]
           ,[CREATETIME]
           ,[UPDATEUSER]
           ,[UPDATETIME])
     VALUES
           (@COLLECTID
           ,@DEALTIME
           ,@PAYNAME
           ,@PAYACCOUNT
           ,@INTOAMOUNT
           ,@DETAILSERIALNUM
           ,@SUMMARY
           ,@REMARK
           ,'0'
           ,'0'
           ,@CREATEUSER
           ,getdate()
           ,@CREATEUSER
           ,getdate())
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@DEALTIME" dbType="String"/>
      <param name="@PAYNAME" dbType="String" />
      <param name="@PAYACCOUNT" dbType="String" />
      <param name="@INTOAMOUNT" dbType="String" />
      <param name="@DETAILSERIALNUM" dbType="String" />
      <param name="@SUMMARY" dbType="String" />
      <param name="@REMARK" dbType="String" />
      <param name="@CREATEUSER" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ApproveCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE [dbo].[WriteOffHis]
       SET [INTOSTATUS] = @INTOSTATUS
          ,[INTODATE] = @INTODATE
          ,[UPDATEUSER] = @OPEUSER
          ,[UPDATETIME] = getdate()
     WHERE [COLLECTID] = @COLLECTID
     AND [WRITEOFFID] = @WRITEOFFID
      ]]>
    </commandText>
    <parameters>
      <param name="@INTOSTATUS" dbType="String" />
      <param name="@INTODATE" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="CheckWriteOffReset" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT [COLLECTID]
          ,[WRITEOFFID]
          ,[DEALTIME]
          ,[PAYNAME]
          ,[PAYACCOUNT]
          ,[INTOAMOUNT]
          ,[DETAILSERIALNUM]
          ,[SUMMARY]
          ,[REMARK]
          ,[INTOSTATUS]
          ,[INTODATE]
          ,[STATUS]
          ,[CREATEUSER]
          ,[CREATETIME]
          ,[UPDATEUSER]
          ,[UPDATETIME]
      FROM [dbo].[WriteOffHis] wof 
      inner join [dbo].[WriteOffHis] woh 
      on wof.[DEALTIME] = woh.DEALTIME
      AND wof.[PAYNAME] = woh.PAYNAME
      AND wof.[PAYACCOUNT] = woh.PAYACCOUNT
      AND wof.[INTOAMOUNT] = woh.INTOAMOUNT
      AND wof.[DETAILSERIALNUM] = woh.DETAILSERIALNUM
      WHERE
      woh.[COLLECTID] = @COLLECTID AND woh.[WRITEOFFID] = @WRITEOFFID
      AND wof.[COLLECTID] <> @COLLECTID AND wof.[WRITEOFFID] <> @WRITEOFFID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetWriteOFFColDetail" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT [COLLECTID]
          ,[WRITEOFFID]
          ,[DEALTIME]
          ,[PAYNAME]
          ,[PAYACCOUNT]
          ,[INTOAMOUNT]
          ,[DETAILSERIALNUM]
          ,[SUMMARY]
          ,[REMARK]
          ,[INTOSTATUS]
          ,[INTODATE]
          ,[STATUS]
          ,[CREATEUSER]
          ,[CREATETIME]
          ,[UPDATEUSER]
          ,[UPDATETIME]
      FROM [dbo].[WriteOffHis]
      WHERE COLLECTID=@COLLECTID AND WRITEOFFID=@WRITEOFFID AND [STATUS]='1'
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetImportCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
          DECLARE @SelectSql NVARCHAR(2000)
          DECLARE @CountSql NVARCHAR(2000)
          DECLARE @WhereSql NVARCHAR(2000)

          IF LEN(@SortField)=0 
	          SET @SortField = N'dt.CREATETIME' 
	      IF LEN(@SortType)=0 
	          SET @SortType = N'DESC' 

          SET @WhereSql=N'WHERE 1=1'
          IF LEN(@UploadStartDT) > 0
          SET @WhereSql = @WhereSql + N' AND CREATETIME >= @UploadStartDT'
           IF LEN(@UploadEndDT) > 0
          SET @WhereSql =@WhereSql + N' AND CREATETIME <= @UploadEndDT'
           IF LEN(@UploadAmountStart) > 0
          SET @WhereSql =@WhereSql + N' AND TOTALAMOUNT >= @UploadAmountStart'
           IF LEN(@UploadAmountEnd) > 0
          SET @WhereSql =@WhereSql + N' AND TOTALAMOUNT <= @UploadAmountEnd'
           IF LEN(@UploadUser) > 0
          SET @WhereSql =@WhereSql + N' AND CREATEUSER = @UploadUser'
   

          SET @SelectSql=N'
          SELECT 
	      TT.[COLLECTID]
	      ,TT.[PAYMENTTYPE]
	      ,TT.[ACTUALAMOUNT]
	      ,TT.[ORIGINAMOUNT]
	      ,TT.[UPLOADUSER]
	      ,TT.[UPLOADDATE]
	      ,TT.[UPLOADREMARK]
	      ,TT.[UPLOADFILENAME]
	      ,TT.[IMPORTTYPE]
	      ,TT.[SERIALDATE]
	      ,TT.[TOTALCOUNT]
	      ,TT.[TOTALAMOUNT]
	      ,TT.[REMARK]
	      ,TT.[STATUS]
	      ,TT.[CREATEUSER]
	      ,TT.[CREATETIME]
	      ,TT.[UPDATEUSER]
	      ,TT.[UPDATETIME]
	  FROM(
          SELECT ROW_NUMBER() OVER(ORDER BY @SortField + @SortType) AS RowId,
		      dt.[COLLECTID]
		      ,dt.[PAYMENTTYPE]
		      ,dt.[ACTUALAMOUNT]
		      ,dt.[ORIGINAMOUNT]
		      ,dt.[UPLOADUSER]
		      ,dt.[UPLOADDATE]
		      ,dt.[UPLOADREMARK]
		      ,dt.[UPLOADFILENAME]
		      ,dt.[IMPORTTYPE]
		      ,dt.[SERIALDATE]
		      ,dt.[TOTALCOUNT]
		      ,dt.[TOTALAMOUNT]
		      ,dt.[REMARK]
		      ,dt.[STATUS]
		      ,dt.[CREATEUSER]
		      ,dt.[CREATETIME]
		      ,dt.[UPDATEUSER]
		      ,dt.[UPDATETIME]
		       from
		      (
		      SELECT [COLLECTID]
		      ,[PAYMENTTYPE]
		      ,[ACTUALAMOUNT]
		      ,[ORIGINAMOUNT]
		      ,[UPLOADUSER]
		      ,[UPLOADDATE]
		      ,[UPLOADREMARK]
		      ,[UPLOADFILENAME]
		      ,[IMPORTTYPE]
		      ,[SERIALDATE]
		      ,[TOTALCOUNT]
		      ,[TOTALAMOUNT]
		      ,[REMARK]
		      ,[STATUS]
		      ,[CREATEUSER]
		      ,[CREATETIME]
		      ,[UPDATEUSER]
		      ,[UPDATETIME]
		  FROM [dbo].[CollectHis]
		        '+@WhereSql+N'
		      ) dt    
          ) TT
          WHERE TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

          SET @CountSql = N'SELECT @TotalCount=COUNT([COLLECTID]) FROM [dbo].[CollectHis] '+@WhereSql

          EXEC sp_executesql @SelectSql,
          N'@UploadStartDT NVARCHAR(30),
            @UploadEndDT NVARCHAR(30),
            @UploadAmountStart NVARCHAR(20),
            @UploadAmountEnd NVARCHAR(20),
            @UploadUser NVARCHAR(30),
            @SortType NVARCHAR(100),
            @SortField NVARCHAR(100),
            @PageSize INT,
            @PageCurrent INT',
            @UploadStartDT,
            @UploadEndDT,
            @UploadAmountStart,
            @UploadAmountEnd,
            @UploadUser,
            @SortType,
            @SortField,
            @PageSize,
            @PageCurrent
  
          EXEC sp_executesql @CountSql,
          N'@UploadStartDT NVARCHAR(30),
            @UploadEndDT NVARCHAR(30),
            @UploadAmountStart NVARCHAR(20),
            @UploadAmountEnd NVARCHAR(20),
            @UploadUser NVARCHAR(30),
            @TotalCount INT OUTPUT',
            @UploadStartDT,
            @UploadEndDT,
            @UploadAmountStart,
            @UploadAmountEnd,
            @UploadUser,
            @TotalCount OUTPUT
      ]]>
    </commandText>
    <parameters>
      <param name="@UploadStartDT" dbType="String" />
      <param name="@UploadEndDT" dbType="String"/>
      <param name="@UploadAmountStart" dbType="String" />
      <param name="@UploadAmountEnd" dbType="String" />
      <param name="@UploadUser" dbType="String" />

      <param name="@TotalCount" dbType="Int32" direction="Output" />
      <param name="@SortType" dbType="String" />
      <param name="@SortField" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetApproveCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT [COLLECTID]
          ,[WRITEOFFID]
          ,[DEALTIME]
          ,[PAYNAME]
          ,[PAYACCOUNT]
          ,[INTOAMOUNT]
          ,[DETAILSERIALNUM]
          ,[SUMMARY]
          ,[REMARK]
          ,[INTOSTATUS]
          ,[INTODATE]
          ,[STATUS]
          ,[CREATEUSER]
          ,[CREATETIME]
          ,[UPDATEUSER]
          ,[UPDATETIME]
      FROM [dbo].[WriteOffHis]
      WHERE COLLECTID=@COLLECTID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetOutstandingBalanceList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(2000)
          DECLARE @CountSql NVARCHAR(2000)
          DECLARE @WhereSql NVARCHAR(2000)

          IF LEN(@SortField)=0 
	          SET @SortField = N'dt.CREATETIME' 
	        IF LEN(@SortType)=0 
	          SET @SortType = N'DESC' 
          SET @WhereSql=N'WHERE [INTOSTATUS]=''1'''
          
          IF LEN(@ImpDealTimeST) > 0
          SET @WhereSql = @WhereSql + N' AND DEALTIME >= @ImpDealTimeST'
           IF LEN(@ImpDealTimeDT) > 0
          SET @WhereSql =@WhereSql + N' AND DEALTIME <= @ImpDealTimeDT'
           IF LEN(@ImpAmountST) > 0
          SET @WhereSql =@WhereSql + N' AND INTOAMOUNT >= @ImpAmountST'
          IF LEN(@ImpAmountDT) > 0
          SET @WhereSql =@WhereSql + N' AND INTOAMOUNT <= @ImpAmountDT'
          IF LEN(@ImpUser) > 0
          SET @WhereSql =@WhereSql + N' AND CREATEUSER <= @ImpUser'
          IF LEN(@ImpPayName) > 0
          SET @WhereSql =@WhereSql + N' AND PAYNAME = @ImpPayName'
          IF LEN(@ImpPayAccount) > 0
		      SET @WhereSql =@WhereSql + N' AND PAYACCOUNT = @ImpPayAccount'
		  
		      IF LEN(@ImpMatch) > 0
		      BEGIN
			      IF (@ImpMatch = '1')
				    BEGIN
					    SET @WhereSql =@WhereSql + N' AND FILTERMATCHID IS NOT NULL'
				    END
			      ELSE
				    BEGIN
					    SET @WhereSql =@WhereSql + N' AND FILTERMATCHID NULL'
				    END
			      END
		      END
		  
          SET @SelectSql=N'
          SELECT 
	          TT.[COLLECTID]
			    ,TT.[WRITEOFFID]
			    ,TT.[DEALTIME]
			    ,TT.[PAYNAME]
			    ,TT.[PAYACCOUNT]
			    ,TT.[INTOAMOUNT]
			    ,TT.[DETAILSERIALNUM]
			    ,TT.[SUMMARY]
			    ,TT.[REMARK]
			    ,TT.[INTOSTATUS]
			    ,TT.[INTODATE]
			    ,TT.[FILTERMATCHID]
			    ,TT.[FILTERMATCHSTATUS]
			    ,TT.[STATUS]
			    ,TT.[CREATEUSER]
			    ,TT.[CREATETIME]
			    ,TT.[UPDATEUSER]
			    ,TT.[UPDATETIME]
            FROM(
            SELECT ROW_NUMBER() OVER(ORDER BY @SortField + @SortType) AS RowId,
		          dt.[COLLECTID]
			    ,dt.[WRITEOFFID]
			    ,dt.[DEALTIME]
			    ,dt.[PAYNAME]
			    ,dt.[PAYACCOUNT]
			    ,dt.[INTOAMOUNT]
			    ,dt.[DETAILSERIALNUM]
			    ,dt.[SUMMARY]
			    ,dt.[REMARK]
			    ,dt.[INTOSTATUS]
			    ,dt.[INTODATE]
			    ,dt.[FILTERMATCHID]
			    ,dt.[FILTERMATCHSTATUS]
			    ,dt.[STATUS]
			    ,dt.[CREATEUSER]
			    ,dt.[CREATETIME]
			    ,dt.[UPDATEUSER]
			    ,dt.[UPDATETIME]
		         from
		        (
		        SELECT [COLLECTID]
				    ,[WRITEOFFID]
				    ,[DEALTIME]
				    ,[PAYNAME]
				    ,[PAYACCOUNT]
				    ,[INTOAMOUNT]
				    ,[DETAILSERIALNUM]
				    ,[SUMMARY]
				    ,[REMARK]
				    ,[INTOSTATUS]
				    ,[INTODATE]
				    ,[FILTERMATCHID]
				    ,[FILTERMATCHSTATUS]
				    ,[STATUS]
				    ,[CREATEUSER]
				    ,[CREATETIME]
				    ,[UPDATEUSER]
				    ,[UPDATETIME]
			    FROM [dbo].[WriteOffHis]
		          '+@WhereSql+N'
		        ) dt    
          ) TT
          WHERE TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

          SET @CountSql = N'SELECT @TotalCount=COUNT(WRITEOFFID) FROM [dbo].[WriteOffHis]'+@WhereSql

          EXEC sp_executesql @SelectSql,
          N'@ImpDealTimeST NVARCHAR(30),
            @ImpDealTimeDT NVARCHAR(30),
            @ImpAmountST NVARCHAR(30),
            @ImpAmountDT NVARCHAR(30),
            @SlAmountDT NVARCHAR(30),
            @ImpUser NVARCHAR(30),
            @ImpPayName NVARCHAR(30),
            @ImpPayAccount NVARCHAR(30),
            @ImpMatch NVARCHAR(5),
            @SortType NVARCHAR(100),
            @SortField NVARCHAR(100),
            @PageSize INT,
            @PageCurrent INT',
            @ImpDealTimeST,
            @ImpDealTimeDT,
            @ImpAmountST,
            @ImpAmountDT,
            @SlAmountDT,
            @ImpUser,
            @ImpPayName,
            @ImpPayAccount,
            @ImpMatch,
            @SortType,
            @SortField,
            @PageSize,
            @PageCurrent
  
          EXEC sp_executesql @CountSql,
          N'@ImpDealTimeST NVARCHAR(30),
            @ImpDealTimeDT NVARCHAR(30),
            @ImpAmountST NVARCHAR(30),
            @ImpAmountDT NVARCHAR(30),
            @SlAmountDT NVARCHAR(30),
            @ImpUser NVARCHAR(30),
            @ImpPayName NVARCHAR(30),
            @ImpPayAccount NVARCHAR(30),
            @ImpMatch NVARCHAR(5),
            @TotalCount INT OUTPUT',
            @ImpDealTimeST,
            @ImpDealTimeDT,
            @ImpAmountST,
            @ImpAmountDT,
            @SlAmountDT,
            @ImpUser,
            @ImpPayName,
            @ImpPayAccount,
            @ImpMatch,
            @TotalCount OUTPUT
      ]]>
    </commandText>
    <parameters>
      <param name="@ImpDealTimeST" dbType="String" />
      <param name="@ImpDealTimeDT" dbType="String" />
      <param name="@ImpAmountST" dbType="String" />
      <param name="@ImpAmountDT" dbType="String" />
      <param name="@ImpUser" dbType="String" />
      <param name="@ImpPayName" dbType="String" />
      <param name="@ImpPayAccount" dbType="String" />
      <param name="@ImpMatch" dbType="String" />
      <param name="@TotalCount" dbType="Int32" direction="Output" />
      <param name="@SortType" dbType="String" />
      <param name="@SortField" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetOutstandingBalanceUnitList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[

      ]]>
    </commandText>
    <parameters>
      <param name="@" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetOutstandingSettleUnitList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(2000)
          DECLARE @CountSql NVARCHAR(2000)
          DECLARE @WhereSql NVARCHAR(2000)

          IF LEN(@SortField)=0 
	          SET @SortField = N'dt.CREATETIME' 
	        IF LEN(@SortType)=0 
	          SET @SortType = N'DESC' 
          SET @WhereSql=N'WHERE 1=1'
          
          IF LEN(@UnitName) > 0
          SET @WhereSql = @WhereSql + N' AND slt.UNITNM like LIKE @UnitName'
           IF LEN(@HotelID) > 0
          SET @WhereSql =@WhereSql + N' AND lit.HOTELID = @HotelID'
           IF LEN(@HotelGroup) > 0
          SET @WhereSql =@WhereSql + N' AND lit.GROUPID = @HotelGroup'
          IF LEN(@SlAmountST) > 0
          SET @WhereSql =@WhereSql + N' AND slt.ACTIVESLAMOUNT >= @SlAmountST'
          IF LEN(@SlAmountDT) > 0
          SET @WhereSql =@WhereSql + N' AND slt.ACTIVESLAMOUNT <= @SlAmountDT'
          IF LEN(@SlPayNo) > 0
          SET @WhereSql =@WhereSql + N' AND slt.HOTEL_PAYNO = @SlPayNo'

          SET @SelectSql=N'
          SELECT 
	          TT.[SLID]
		      ,TT.[UNITID]
		      ,TT.[UNITNM]
		      ,TT.[TERMS]
		      ,TT.[ACTIVESLAMOUNT]
		      ,TT.[SLSTATUS]
		      ,TT.INVOICENUM
		      ,TT.CREATETIME
          ,CASE WHEN TT.[SLSTATUS] = ''0'' THEN ''待出账'' when TT.[SLSTATUS] = ''1'' then ''已出账 待确认'' when TT.[SLSTATUS] = ''2'' then ''已确认待开票'' when TT.[SLSTATUS] = ''3'' then ''已开票待回款'' when TT.[SLSTATUS] = ''4'' then ''已回款待销账'' ELSE ''已销账'' END AS SLSTATUSDIS
          FROM(
          SELECT ROW_NUMBER() OVER(ORDER BY @SortField + @SortType) AS RowId,
		        dt.[SLID]
		      ,dt.[UNITID]
		      ,dt.[UNITNM]
		      ,dt.[TERMS]
		      ,dt.[ACTIVESLAMOUNT]
		      ,dt.[SLSTATUS]
		      ,dt.INVOICENUM
		      ,dt.CREATETIME
		       from
		      (
		      SELECT distinct slt.[SLID]
				  ,slt.[UNITID]
				  ,slt.[UNITNM]
				  ,slt.[TERMS]
				  ,slt.[ACTIVESLAMOUNT]
				  ,slt.[SLSTATUS]
				  ,ih.INVOICENUM
				  ,slt.CREATETIME
			  FROM [dbo].[SettlementManager] slt
			  inner join (select UNITID,max(CREATETIME) AS MCRDATE from [dbo].[SettlementManager] group by UNITID) slm
			  on slt.UNITID=slm.UNITID and slt.CREATETIME=slm.CREATETIME
			  left join dbo.InvoiceHis ih on slt.INVOICEID = ih.INVOICEID and ih.status=''1''
			  left join dbo.LiquidateItem lit on slt.[SLID]=lit.[SLID]
		        '+@WhereSql+N'
		      ) dt    
          ) TT
          WHERE TT.RowId > @PageSize*@PageCurrent and TT.RowId <= (@PageCurrent+1)*@PageSize'

          SET @CountSql = N'SELECT @TotalCount=COUNT(distinct slt.[SLID]) FROM [dbo].[SettlementManager] slt
			  inner join (select UNITID,max(CREATETIME) AS MCRDATE from [dbo].[SettlementManager] group by UNITID) slm
			  on slt.UNITID=slm.UNITID and slt.CREATETIME=slm.CREATETIME
			  left join dbo.InvoiceHis ih on slt.INVOICEID = ih.INVOICEID
			  left join dbo.LiquidateItem lit on slt.[SLID]=lit.[SLID] '+@WhereSql

          EXEC sp_executesql @SelectSql,
          N'@UnitName NVARCHAR(50),
            @HotelID NVARCHAR(30),
            @HotelGroup NVARCHAR(30),
            @SlAmountST NVARCHAR(30),
            @SlAmountDT NVARCHAR(30),
            @SlPayNo NVARCHAR(30),
            @SortType NVARCHAR(100),
            @SortField NVARCHAR(100),
            @PageSize INT,
            @PageCurrent INT',
            @UnitName,
            @HotelID,
            @HotelGroup,
            @SlAmountST,
            @SlAmountDT,
            @SlPayNo,
            @SortType,
            @SortField,
            @PageSize,
            @PageCurrent
  
          EXEC sp_executesql @CountSql,
          N'@UnitName NVARCHAR(50),
            @HotelID NVARCHAR(30),
            @HotelGroup NVARCHAR(30),
            @SlAmountST NVARCHAR(30),
            @SlAmountDT NVARCHAR(30),
            @SlPayNo NVARCHAR(30),
            @TotalCount INT OUTPUT',
            @UnitName,
            @HotelID,
            @HotelGroup,
            @SlAmountST,
            @SlAmountDT,
            @SlPayNo,
            @TotalCount OUTPUT
      ]]>
    </commandText>
    <parameters>
      <param name="@UnitName" dbType="String" />
      <param name="@HotelID" dbType="String" />
      <param name="@HotelGroup" dbType="String" />
      <param name="@SlAmountST" dbType="String" />
      <param name="@SlAmountDT" dbType="String" />
      <param name="@SlPayNo" dbType="String" />
      <param name="@TotalCount" dbType="Int32" direction="Output" />
      <param name="@SortType" dbType="String" />
      <param name="@SortField" dbType="String" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetInvoiceHisList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [SLID]
          ,[INVOICEID]
          ,[INVOICENM]
          ,[INVOICEPROJECT]
          ,[INVOICEAMOUNT]
          ,[ZIPADDRESS]
          ,[INVOICENUM]
          ,[ISREOPEN]
          ,[REOPENREASON]
          ,[OLDINVOICENUM]
          ,[ZIPNUM]
          ,[ISREZIP]
          ,[OLDZIPNUM]
          ,[STATUS]
          ,[CREATEUSER]
          ,[CREATETIME]
          ,[UPDATEUSER]
          ,[UPDATETIME]
          ,convert(nvarchar(10), [Create_Time], 120) AS CRDATE
      FROM [dbo].[InvoiceHis]
      WHERE [SLID]=@SLID AND [STATUS]='1'
      ]]>
    </commandText>
    <parameters>
      <param name="@SLID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="AddSettleAdjust" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [dbo].[SettlementItem]
           ([SLID]
           ,[SETTLETYPE]
           ,[ADJUSTNM]
           ,[ADJUSTAMOUNT]
           ,[REMARK]
           ,[STATUS]
           ,[CREATEUSER]
           ,[CREATETIME]
           ,[UPDATEUSER]
           ,[UPDATETIME])
     VALUES
           (@SLID
           ,@SETTLETYPE
           ,@ADJUSTNM
           ,@ADJUSTAMOUNT
           ,@REMARK
           ,@STATUS
           ,@CREATEUSER
           ,getdate()
           ,@CREATEUSER
           ,getdate())
      ]]>
    </commandText>
    <parameters>
      <param name="@SLID" dbType="String" />
      <param name="@SETTLETYPE" dbType="String" />
      <param name="@ADJUSTNM" dbType="String" />
      <param name="@ADJUSTAMOUNT" dbType="String" />
      <param name="@REMARK" dbType="String" />
      <param name="@STATUS" dbType="String" />
      <param name="@CREATEUSER" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="AddIssueSettle" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[

      ]]>
    </commandText>
    <parameters>
      <param name="@" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ConfirmWriteOffHis" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [dbo].[WriteOffHis]
           SET 
            [STATUS] = '1'
	          ,[UPDATEUSER] = getdate()
            ,[UPDATETIME] = @OPEUSER
         WHERE WRITEOFFID=@WRITEOFFID
      ]]>
    </commandText>
    <parameters>
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ConfirmCollectSelHis" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE [dbo].[SettlementManager]
         SET 
            [WRITEOFFID] = @WRITEOFFID
            ,HAIRCUTSCONFIRMUSER = @OPEUSER
            ,HAIRCUTSCONFIRMDATE = getdate()
            ,HAIRCUTSCONFIRMAMOUNT = @AMOUNT
            ,HAIRCUTSCONFIRMREMARK = @REMARK
            ,UNITREMARK=@UNITREMARK,
            ,[STATUS] = '4'
            ,[UPDATEUSER] = @OPEUSER
            ,[UPDATETIME] = getdate()
       WHERE SLID=@SLID
      ]]>
    </commandText>
    <parameters>
      <param name="@SLID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
      <param name="@AMOUNT" dbType="String" />
      <param name="@REMARK" dbType="String" />
      <param name="@UNITREMARK" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ConfirmCollectHis" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE [dbo].[SettlementManager]
         SET 
            [WRITEOFFID] = @WRITEOFFID
            ,HAIRCUTSCONFIRMUSER = @OPEUSER
            ,HAIRCUTSCONFIRMDATE = getdate()
            ,HAIRCUTSCONFIRMAMOUNT = @AMOUNT
            ,HAIRCUTSCONFIRMREMARK = @REMARK
            ,[STATUS] = '4'
            ,[UPDATEUSER] = @OPEUSER
            ,[UPDATETIME] = getdate()
       WHERE SLID=@SLID
      ]]>
    </commandText>
    <parameters>
      <param name="@SLID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
      <param name="@AMOUNT" dbType="String" />
      <param name="@REMARK" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="ConfirmItemHis" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE [dbo].[SettlementItem]
         SET 
            [WRITEOFFID] = @WRITEOFFID
            ,[HAIRCUTSCONFIRMUSER] = @OPEUSER
            ,[HAIRCUTSCONFIRMDATE] = getdate()
            ,[HAIRCUTSCONFIRMAMOUNT] = @AMOUNT
            ,[STATUS] = '1'
            ,[UPDATEUSER] = @OPEUSER
            ,[UPDATETIME] = getdate()
       WHERE SETTLEID=@SETTLEID
      ]]>
    </commandText>
    <parameters>
      <param name="@SETTLEID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@OPEUSER" dbType="String" />
      <param name="@AMOUNT" dbType="String" />
      <param name="@REMARK" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetAutoCompleteCollectList" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT [COLLECTID]
            ,[WRITEOFFID] 
            ,PAYACCOUNT
            ,INTOAMOUNT
        FROM [dbo].[WriteOffHis]
        WHERE [INTOSTATUS]='1' AND COLLECTID=@COLLECTID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetWriteOffAutoCompleteValKey1" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
      sm1.SLID
      FROM [dbo].[WriteOffHis] wh
      left join dbo.SettlementManager sm1 on wh.PAYACCOUNT=sm1.HOTEL_PAYNO and sm1.SLSTATUS <> '4'
      WHERE  wh.COLLECTID=@COLLECTID AND  wh.WRITEOFFID=@WRITEOFFID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetWriteOffAutoCompleteValKey2" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
        sm2.SLID
        FROM [dbo].[WriteOffHis] wh
        left join dbo.SettlementManager sm2 on wh.PAYNAME like '%'+sm2.UNITNM+'%' AND sm2.SLID <> @SLID and sm2.SLSTATUS <> '4'
        WHERE  wh.COLLECTID=@COLLECTID AND  wh.WRITEOFFID=@WRITEOFFID
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@SLID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetWriteOffAutoCompleteValKey3" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
       DECLARE @SelectSql NVARCHAR(2000)
       DECLARE @WhereSql NVARCHAR(2000)

      IF LEN(@SLIDS) > 0
      SET @WhereSql = @WhereSql + N' AND sm3.SLID NOT IN (@SLIDS)'

      SET @SelectSql=N'
      SELECT 
      sm3.SLID
      FROM [dbo].[WriteOffHis] wh
      left join dbo.SettlementManager sm3 on wh.INTOAMOUNT = sm3.ACTIVESLAMOUNT' + @WhereSql + N' and sm3.SLSTATUS <> ''4''
      WHERE  wh.COLLECTID=@COLLECTID AND  wh.WRITEOFFID=@WRITEOFFID'

      EXEC sp_executesql @SelectSql
       N'@COLLECTID NVARCHAR(30),
         @WRITEOFFID NVARCHAR(30),
         @SLIDS NVARCHAR(100)',
         @COLLECTID,
         @WRITEOFFID,
         @SLIDS
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@SLID" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetWriteOffAutoCompleteValKey4" database="SELT" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @SelectSql NVARCHAR(2000)
       DECLARE @WhereSql NVARCHAR(2000)

      IF LEN(@SLIDS) > 0
      SET @WhereSql = @WhereSql + N' AND sm4.SLID NOT IN (@SLIDS)'

      SET @SelectSql=N'
      SELECT 
      sm4.SLID
      FROM [dbo].[WriteOffHis] wh
      left join dbo.SettlementManager sm4 on wh.INTOAMOUNT >= sm4.ACTIVESLAMOUNT - 100 AND wh.INTOAMOUNT <= sm4.ACTIVESLAMOUNT + 100' + @WhereSql + N' and sm4.SLSTATUS <> ''4''
      WHERE  wh.COLLECTID=@COLLECTID AND  wh.WRITEOFFID=@WRITEOFFID'

      EXEC sp_executesql @SelectSql
       N'@COLLECTID NVARCHAR(30),
         @WRITEOFFID NVARCHAR(30),
         @SLIDS NVARCHAR(100)',
         @COLLECTID,
         @WRITEOFFID,
         @SLIDS
      ]]>
    </commandText>
    <parameters>
      <param name="@COLLECTID" dbType="String" />
      <param name="@WRITEOFFID" dbType="String" />
      <param name="@SLID" dbType="String" />
    </parameters>
  </dataCommand>

</dataOperations>
